USE KURS


GO

CREATE TABLE PROVIDERS (
PROVIDER_ID INT IDENTITY(1,1) PRIMARY KEY  NOT NULL,
ADRESS NVARCHAR(50) NOT NULL,
PHONE NVARCHAR (30) NOT NULL,
NAMES NVARCHAR (30) NOT NULL
)

CREATE TABLE INVOICE (
INVOICE_ID INT IDENTITY(1,1) PRIMARY KEY  NOT NULL,
FINAL_SUM MONEY NOT NULL,
STOCK_ID INT NOT NULL,
PROVIDER_ID  INT NOT NULL,
CONSTRAINT FK_PROVIDER
FOREIGN KEY(PROVIDER_ID) REFERENCES PROVIDERS (PROVIDER_ID),
CONSTRAINT FK_STOCK
FOREIGN KEY(STOCK_ID) REFERENCES STOCK (STOCK_ID))

CREATE TABLE STOCK (
STOCK_ID INT IDENTITY(1,1) PRIMARY KEY  NOT NULL,
ADRESS NVARCHAR(50) NOT NULL,
NAMES NVARCHAR (30) NOT NULL)

CREATE TABLE DELIVERY (
DELIVERY_ID INT IDENTITY(1,1) PRIMARY KEY  NOT NULL,
COUNTS INT NOT NULL,
NAMES NVARCHAR (30) NOT NULL,
PRICE MONEY NOT NULL)

CREATE TABLE GOODS_ARIVAL (
GOODS_ARIVAL_ID INT IDENTITY(1,1) PRIMARY KEY  NOT NULL,
INVOICE_ID INT NOT NULL,
DELIVERY_ID INT NOT NULL,
PRICE MONEY NOT NULL,
COUNTS INT NOT NULL,
CONSTRAINT FK_INVOICE
FOREIGN KEY(INVOICE_ID) REFERENCES INVOICE (INVOICE_ID),
CONSTRAINT FK_DELIVERY
FOREIGN KEY(DELIVERY_ID ) REFERENCES DELIVERY (DELIVERY_ID )
)

CREATE TABLE GOODS_CARE (
GOODS_CARE_ID INT IDENTITY(1,1) PRIMARY KEY  NOT NULL,
PRICE MONEY NOT NULL,
COUNTS INT NOT NULL,
DELIVERY_ID  INT NOT NULL,
CONSUMABLES_ID INT NOT NULL,
CONSTRAINT FK_DELIVERY_GOODS_CARE
FOREIGN KEY(DELIVERY_ID) REFERENCES DELIVERY (DELIVERY_ID),
CONSTRAINT FK_CONSUMABLES_GOODS_CARE
FOREIGN KEY(CONSUMABLES_ID ) REFERENCES CONSUMABLES (CONSUMABLES_ID )
)

CREATE TABLE CONSUMABLES (
CONSUMABLES_ID INT IDENTITY(1,1) PRIMARY KEY  NOT NULL,
STOCK_ID INT NOT NULL,
FINAL_SUM MONEY NOT NULL,
CONSTRAINT FK_STOCK2
FOREIGN KEY(STOCK_ID) REFERENCES STOCK (STOCK_ID)
)

CREATE TABLE EMPLOYEES (
EMPLOYEES_ID INT IDENTITY(1,1) PRIMARY KEY  NOT NULL,
STOCK_ID INT NOT NULL,
ROLS_ID INT NOT NULL,
FIRSTNAME NVARCHAR (30) NOT NULL,
LASTNAME NVARCHAR (30) NOT NULL,
MIDLENAME NVARCHAR (30) NOT NULL,
PHONE NVARCHAR (30) NOT NULL,
LOGINS NVARCHAR(300) NOT NULL,
PASSWORDS NVARCHAR(200) NOT NULL,
CONSTRAINT FK_STOCK1
FOREIGN KEY(STOCK_ID) REFERENCES STOCK (STOCK_ID),
CONSTRAINT FK_ROLS
FOREIGN KEY(ROLS_ID ) REFERENCES ROLS (ROLS_ID))



CREATE TABLE ROLS (
ROLS_ID INT IDENTITY(1,1) PRIMARY KEY  NOT NULL,
NAMES NVARCHAR (30) NOT NULL
)

-- Добавление данных в таблицу PROVIDERS
INSERT INTO PROVIDERS (ADRESS, PHONE, NAMES)
VALUES ('Москва, ул. Пушкина, д. 10', '8-800-123-4567', 'Поставщик 1'),
       ('Санкт-Петербург, пр. Невский, д. 20', '8-800-987-6543', 'Поставщик 2'),
       ('Екатеринбург, ул. Ленина, д. 5', '8-800-567-8901', 'Поставщик 3');

-- Добавление данных в таблицу STOCK
INSERT INTO STOCK (ADRESS, NAMES)
VALUES ('Москва, ул. Тверская, д. 15', 'Склад 1'),
       ('Санкт-Петербург, ул. Малая Морская, д. 30', 'Склад 2'),
       ('Екатеринбург, ул. Кирова, д. 10', 'Склад 3');

-- Добавление данных в таблицу DELIVERY
INSERT INTO DELIVERY (COUNTS, NAMES, PRICE)
VALUES (100, 'Товар 1', 100.00),
       (200, 'Товар 2', 200.00),
       (300, 'Товар 3', 300.00);

-- Добавление данных в таблицу GOODS_ARIVAL
INSERT INTO GOODS_ARIVAL (INVOICE_ID, DELIVERY_ID, PRICE, COUNTS)
VALUES (1, 1, 100.00, 50),
       (1, 2, 200.00, 100),
       (2, 3, 300.00, 150);

-- Добавление данных в таблицу GOODS_CARE
INSERT INTO GOODS_CARE (PRICE, COUNTS, DELIVERY_ID, CONSUMABLES_ID)
VALUES (100.00, 50, 1, 1),
       (200.00, 100, 2, 2),
       (300.00, 150, 3, 3);

-- Добавление данных в таблицу CONSUMABLES
INSERT INTO CONSUMABLES (FINAL_SUM, STOCK_ID)
VALUES (500.00, 1),
       (600.00, 2),
       (700.00, 3);

-- Добавление данных в таблицу EMPLOYEES
INSERT INTO EMPLOYEES (STOCK_ID, ROLS_ID, FIRSTNAME, LASTNAME, MIDLENAME, PHONE, LOGINS, PASSWORDS)
VALUES (1, 1, 'Иван', 'Иванов', 'Иванович', '8-800-111-1111','2b75e17ca1dec7603d154432e69e59263094f0631cf47961aa2345c2de7be02f', '53d453b0c08b6b38ae91515dc88d25fbecdd1d6001f022419629df844f8ba433'),
       (2, 2, 'Петр', 'Петров', 'Петрович', '8-800-222-2222', 'af767d04b3dd4ea8c0987561c3f1ce763eb2ea49ca35b72a58b461b6f07a09a7', 'password2'),
       (3, 3, 'Сидор', 'Сидоров', 'Сидорович', '8-800-333-3333', 'd6a85a7bcfee100b6e0d0997cec68c8b3158658b37d4eac4d0916a41d25f736e', 'password3');

	   -- Добавление данных в таблицу ROLS
INSERT INTO ROLS (NAMES)
VALUES ('Админ'),
       ('Менеджер'),
       ('Приемщик');

	   --Добавление записей в таблицу INVOICE
INSERT INTO INVOICE (FINAL_SUM, STOCK_ID, PROVIDER_ID)
VALUES (500.00, 1, 1),
       (1000.00, 2, 2),
       (1500.00, 3, 3);